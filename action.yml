name: ECR Scan
branding:
  icon: arrow-right-circle
  color: gray-dark
description: |
  This action scans ecr scan result and reports results back to pr

inputs:
  debug-mode:
    description: Set to true for verbose execution when debugging
    required: false
    default: 'false'
  log-level:
    description: The log level to use for the execution
    required: false
    default: 'info'
  log-timestamped:
    description: Set to true in order to enable timestamps on log messages
    required: false
    default: 'true'
  repo-org:
    description: Github Org to use for PR comment
    required: true
  repo-name:
    description: Github Repo Name to use for PR comment
    required: true
  pr-number:
    description: PR number to be used for PR comment
    required: true
  aws-account-id:
    description: AWS account ID to use for ECR repo
    required: true
  ecr-repo-name:
    description: AWS ECR Repo Name to use to view scan
    required: true
  ecr-repo-tag:
    description: AWS ECR Repo image tag to use to view scan
    required: true
  use-alpha:
    description: AWS ECR Repo Alpha image
    required: true
    default: 'false'


# TODO(user): Define your outputs here
outputs:
  some-output:
    description: 'Some output description'
  some-output:
    description: 'Some output description'
  some-output:
    description: 'Some output description'

runs:
  using: 'docker'
  image: Dockerfile
  env:
    DEBUG_MODE: ${{ inputs.debug-mode }}
    LOG_LEVEL: ${{ inputs.log-level }}
    LOG_TIMESTAMPED: ${{ inputs.log-timestamped }}
    REPO_ORG: ${{ inputs.repo-org }}
    REPO_NAME: ${{ inputs.repo-name }}
    PR_NUMBER: ${{ inputs.pr-number }}
    AWS_ACCOUNT_ID: ${{ inputs.aws-account-id }}
    ECR_REPO_NAME: ${{ inputs.ecr-repo-name }}
    ECR_REPO_TAG: ${{ inputs.ecr-repo-tag }}
    USE_ALPHA_REGISTRY: ${{ inputs.use-alpha }}
